#version: '3.12'
services:
  travis-backend:
    build:
      context: .
      dockerfile: Dockerfile.backend
    image: travis-backend:latest
    environment:
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - TAVILY_API_KEY=${TAVILY_API_KEY}
      - LANGFUSE_HOST=${LANGFUSE_HOST}
      - LANGFUSE_PUBLIC_KEY=${LANGFUSE_PUBLIC_KEY}
      - LANGFUSE_SECRET_KEY=${LANGFUSE_SECRET_KEY}
      # Database connection environment variables
      - POSTGRES_HOST=${POSTGRES_HOST}
      - POSTGRES_PORT=${POSTGRES_PORT}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    ports:
      - "8000:8000"
    networks:
      - app-network
    depends_on:
      postgres:
        condition: service_healthy

  postgres:
    build:
      context: .
      dockerfile: Dockerfile.pgvector
    environment:
      - POSTGRES_HOST=${POSTGRES_HOST}
      - POSTGRES_PORT=${POSTGRES_PORT}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-scripts/:/docker-entrypoint-initdb.d/
    networks:
      - app-network
    #    command: [ "postgres", "-c", "shared_preload_libraries=vector" ]
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U sayvai -d user-conversations" ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  pgadmin:
    image: dpage/pgadmin4:latest
    environment:
      - PGADMIN_DEFAULT_EMAIL=${PGADMIN_DEFAULT_EMAIL}
      - PGADMIN_DEFAULT_PASSWORD=${PGADMIN_DEFAULT_PASSWORD}
    ports:
      - "5050:80"
    depends_on:
      - postgres
    networks:
      - app-network

# frontend service
  travis-frontend:
    build:
      context: .
      dockerfile: Dockerfile.frontend
    image: travis-frontend:latest
    ports:
      - "8501:8501"
    depends_on:
      - travis-backend
networks:
  app-network:
    driver: bridge

volumes:
  postgres_data:
